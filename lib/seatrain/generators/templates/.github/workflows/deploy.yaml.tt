name: Deploy
on:
  push:
    branches:
      - master

jobs:
  experiment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          IMAGE="<%= seatrain_production_image_name %>"
          echo ::set-output name=tagged_image::${IMAGE}:${TAG} 
          echo ::set-output name=tag::${TAG}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: <%= seatrain_docker_server %>
          username: <%= seatrain_docker_login %>
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Copy master key from a secret
        run: echo ${{ secrets.RAILS_MASTER_KEY }} > config/master.key

      - name: Build and push production image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .seatrain/Dockerfile.prod
          push: true
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            RUBY_VERSION=<%= seatrain_ruby_version %>
            PG_MAJOR=<%= seatrain_pg_major_version %>
            NODE_MAJOR=<%= seatrain_node_major_version %>
            YARN_VERSION=<%= seatrain_yarn_version %>
            BUNDLER_VERSION=<%= seatrain_bundler_version %>

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig show seatrain-demo > $GITHUB_WORKSPACE/.kubeconfig

      - name: Deploy to cluster
        run: >
          export KUBECONFIG=$GITHUB_WORKSPACE/.kubeconfig &&
<%= generate_upgrade_string -%>
          --set-string global.image.tag=${{ steps.prep.outputs.tag }}
